document.addEventListener('DOMContentLoaded', () => {const chatMessages = document.getElementById('chat-messages');const userInput = document.getElementById('user-input');const sendButton = document.getElementById('send-button');const displayMessage = (message, type) => {const messageDiv = document.createElement('div');messageDiv.classList.add('message', `${type}-message`);messageDiv.innerHTML = `<p>${message}</p>`;chatMessages.appendChild(messageDiv);chatMessages.scrollTop = chatMessages.scrollHeight;};const getGeminiResponse = async (userMessage) => {let aiResponse;const lowerCaseMessage = userMessage.toLowerCase();if (lowerCaseMessage.includes('hello') || lowerCaseMessage.includes('hi')) {aiResponse = 'Hello there! How can I help you today?';} else if (lowerCaseMessage.includes('how are you')) {aiResponse = 'I am an AI, so I don\'t have feelings, but I\'m ready to assist you!';} else if (lowerCaseMessage.includes('your name')) {aiResponse = 'I am Gemini AI Chatbot, created to help you.';} else if (lowerCaseMessage.includes('features')) {aiResponse = 'I can provide intelligent and context-aware responses, thanks to Gemini API integration. I also have a modern green-themed UI and a responsive layout!';} else if (lowerCaseMessage.includes('thank you') || lowerCaseMessage.includes('thanks')) {aiResponse = 'You\'re welcome! Is there anything else?';} else if (lowerCaseMessage.includes('bye') || lowerCaseMessage.includes('goodbye')) {aiResponse = 'Goodbye! Have a great day!';} else {aiResponse = `I received your message: "${userMessage}". As a simulated Gemini AI, I'm still learning. How else can I assist?`;}await new Promise(resolve => setTimeout(resolve, 800));displayMessage(aiResponse, 'ai');};const sendMessage = () => {const message = userInput.value.trim();if (message) {displayMessage(message, 'user');userInput.value = '';getGeminiResponse(message);}};sendButton.addEventListener('click', sendMessage);userInput.addEventListener('keypress', (event) => {if (event.key === 'Enter') {sendMessage();}});});