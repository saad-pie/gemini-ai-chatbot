document.addEventListener('DOMContentLoaded', () => {const chatMessages = document.getElementById('chat-messages');const userInput = document.getElementById('user-input');const sendButton = document.getElementById('send-button');const GEMINI_API_KEY = 'AIzaSyAbxNrXr96nzxA9iwKRcYbLreEfnGqf5pA';const GEMINI_API_URL = 'https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=';const displayMessage = (message, type) => {const messageDiv = document.createElement('div');messageDiv.classList.add('message', `${type}-message`);messageDiv.innerHTML = `<p>${message}</p>`;chatMessages.appendChild(messageDiv);chatMessages.scrollTop = chatMessages.scrollHeight;};const getGeminiResponse = async (userMessage) => {try {const response = await fetch(`${GEMINI_API_URL}${GEMINI_API_KEY}`, {method: 'POST',headers: {'Content-Type': 'application/json'},body: JSON.stringify({contents: [{parts: [{text: userMessage}]}]})});if (!response.ok) {const errorData = await response.json();console.error('Gemini API error:', errorData);displayMessage('Sorry, I encountered an error. Please try again later.', 'ai');return;}const data = await response.json();const aiResponse = data.candidates && data.candidates[0] && data.candidates[0].content && data.candidates[0].content.parts && data.candidates[0].content.parts[0] && data.candidates[0].content.parts[0].text? data.candidates[0].content.parts[0].text: 'I could not generate a response at this time. Please try rephrasing your message.';displayMessage(aiResponse, 'ai');} catch (error) {console.error('Error calling Gemini API:', error);displayMessage('Sorry, something went wrong while connecting to the AI. Please try again.', 'ai');}};const sendMessage = () => {const message = userInput.value.trim();if (message) {displayMessage(message, 'user');userInput.value = '';getGeminiResponse(message);}};sendButton.addEventListener('click', sendMessage);userInput.addEventListener('keypress', (event) => {if (event.key === 'Enter') {sendMessage();}});});